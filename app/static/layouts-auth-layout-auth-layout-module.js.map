{"version":3,"sources":["./src/app/layouts/auth-layout/component/post-box/post-box.component.html","./src/app/layouts/auth-layout/pages/category/category.component.html","./src/app/layouts/auth-layout/pages/home/home.component.html","./src/app/layouts/auth-layout/pages/login/login.component.html","./src/app/layouts/auth-layout/pages/post/post.component.html","./src/app/layouts/auth-layout/pages/register/register.component.html","./src/app/layouts/auth-layout/pages/vendors/vendors.component.html","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/layouts/auth-layout/component/post-box/post-box.component.css","./src/app/layouts/auth-layout/component/post-box/post-box.component.ts","./src/app/layouts/auth-layout/pages/category/category.component.css","./src/app/layouts/auth-layout/pages/category/category.component.ts","./src/app/layouts/auth-layout/pages/home/home.component.css","./src/app/layouts/auth-layout/pages/home/home.component.ts","./src/app/layouts/auth-layout/pages/login/login.component.scss","./src/app/layouts/auth-layout/pages/login/login.component.ts","./src/app/layouts/auth-layout/pages/post/post.component.css","./src/app/layouts/auth-layout/pages/post/post.component.ts","./src/app/layouts/auth-layout/pages/register/register.component.scss","./src/app/layouts/auth-layout/pages/register/register.component.ts","./src/app/layouts/auth-layout/pages/vendors/vendors.component.css","./src/app/layouts/auth-layout/pages/vendors/vendors.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mIAAoE,kBAAkB,8RAA8R,uBAAuB,gRAAgR,oCAAoC,+HAA+H,cAAc,gEAAgE,iBAAiB,0L;;;;;;;;;;;;ACA56B;AAAe,iQAAkM,+BAA+B,iX;;;;;;;;;;;;ACAhP;AAAe,iQAAkM,+BAA+B,iX;;;;;;;;;;;;ACAhP;AAAe,inH;;;;;;;;;;;;ACAf;AAAe,m9BAAo5B,sBAAsB,yJAAyJ,cAAc,+JAA+J,sCAAsC,8N;;;;;;;;;;;;ACAryC;AAAe,wnBAAyjB,uBAAuB,4kK;;;;;;;;;;;;ACA/lB;AAAe,ggCAAi8B,qBAAqB,GAAG,oBAAoB,yjBAAyjB,qBAAqB,GAAG,oBAAoB,qKAAqK,wKAAwK,gBAAgB,4GAA4G,gBAAgB,wIAAwI,eAAe,yGAAyG,yBAAyB,oM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1yE;AACM;AACA;AACmB;AACT;AACF;AAEQ;AACS;AACZ;AACS;AACT;AACY;AACG;AACtB;AACmB;AAoBxE;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAnB5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,qEAAgB,CAAC;gBACvC,0DAAW;gBACX,mEAAmB;gBACnB,sFAAgB;gBAChB,oEAAS;aACV;YACD,YAAY,EAAE;gBACZ,2EAAc;gBACd,oFAAiB;gBACjB,wEAAa;gBACb,iFAAgB;gBAChB,yEAAa;gBACb,qFAAiB;gBACjB,wFAAgB;aACjB;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACjCkC;AACS;AACZ;AACS;AACG;AACZ;AAErD,IAAM,gBAAgB,GAAW;IACpC,EAAE,IAAI,EAAE,EAAE,EAAW,SAAS,EAAE,wEAAa,EAAE;IAC/C,EAAE,IAAI,EAAE,OAAO,EAAW,SAAS,EAAE,2EAAc,EAAE;IACrD,EAAE,IAAI,EAAE,UAAU,EAAQ,SAAS,EAAE,oFAAiB,EAAE;IACxD,EAAE,IAAI,EAAE,cAAc,EAAQ,SAAS,EAAE,oFAAiB,EAAE;IAC5D,EAAE,IAAI,EAAE,qBAAqB,EAAQ,SAAS,EAAE,oFAAiB,EAAE;IACnE,EAAE,IAAI,EAAE,iBAAiB,EAAQ,SAAS,EAAE,wEAAa,EAAE;IAC3D,EAAE,IAAI,EAAE,SAAS,EAAQ,SAAS,EAAE,iFAAgB,EAAE;CACzD,CAAC;;;;;;;;;;;;;ACjBF;AAAe,6GAA8C,2L;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAJ;AAOzD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IAJQ;QAAR,2DAAK,EAAE;;kDAAM;IADH,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,oNAAwC;;SAEzC,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;ACP7B;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACD;AACW;AACM;AACvB;AACuB;AAOlE;IAKE,2BACU,KAAqB,EACrB,WAAwB,EACxB,cAA8B,EAC9B,aAA4B,EAC5B,mBAAwC;QALlD,iBA2BC;QA1BS,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,wBAAmB,GAAnB,mBAAmB,CAAqB;QAEhD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,gBAAM;YACJ,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAClD,cAAI;gBACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC1B,UAAU,CAAC;oBACT,YAAI,CAAC,mBAAmB,CAAC,YAAY,CACnC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAI,CAAC,QAAQ,CAAC,WAAW,CAC/C;gBAFD,CAEC,EACC,GAAG,CAAC,CAAC;YACX,CAAC,CACF,CAAC;YAEF,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACvD,cAAI;gBACF,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YACzB,CAAC,CACF,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;;gBA7BgB,8DAAc;gBACR,yEAAW;gBACR,+EAAc;gBACf,wDAAa;gBACP,0EAAmB;;IAVvC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gNAAwC;;SAEzC,CAAC;yCAOiB,8DAAc;YACR,yEAAW;YACR,+EAAc;YACf,wDAAa;YACP,0EAAmB;OAVvC,iBAAiB,CAqC7B;IAAD,wBAAC;CAAA;AArC6B;;;;;;;;;;;;;ACZ9B;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACU;AACjB;AACF;AACyB;AACA;AAOlE;IAIE,uBACU,WAAwB,EACxB,aAA4B,EAC5B,MAAc,EACd,mBAAwC,EACxC,cAA8B;QAJ9B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAPxC,UAAK,GAAG,EAAE,CAAC;IAQP,CAAC;IAEL,gCAAQ,GAAR;QAAA,iBAKC;QAJC,UAAU,CAAC;YACT,YAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,MAAM,EAAE,qBAAqB,CAAC;QAApE,CAAoE,EAClE,GAAG,CAAC,CAAC;QACT,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CACtC,cAAI;YACF,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;;gBApBsB,yEAAW;gBACT,wDAAa;gBACpB,sDAAM;gBACO,0EAAmB;gBACxB,+EAAc;;IAT7B,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oMAAoC;;SAErC,CAAC;yCAMuB,yEAAW;YACT,wDAAa;YACpB,sDAAM;YACO,0EAAmB;YACxB,+EAAc;OAT7B,aAAa,CA2BzB;IAAD,oBAAC;CAAA;AA3ByB;;;;;;;;;;;;;ACZ1B;AAAe,6GAA8C,+K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACD;AACnB;AACE;AACuB;AAOlE;IASE,wBACU,WAAwB,EACxB,aAA4B,EAC5B,MAAc,EACd,mBAAwC;QAHxC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QAXlD,cAAS,GAAG;YACV,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC;IAOE,CAAC;IAEL,iCAAQ,GAAR;QAAA,iBAIC;QAHC,UAAU,CAAC;YACX,YAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,OAAO,EAAE,0BAA0B,CAAC;QAA1E,CAA0E,EACxE,GAAG,CAAC,CAAC;IACT,CAAC;IAED,oCAAW,GAAX;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC9C,cAAI;YACF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC7B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAI,KAAI,CAAC,SAAS,CAAC,IAAM,CAAC,CAAC,CAAC;aACnD;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;;gBA1BsB,yEAAW;gBACT,wDAAa;gBACpB,sDAAM;gBACO,0EAAmB;;IAbvC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uMAAqC;;SAEtC,CAAC;yCAWuB,yEAAW;YACT,wDAAa;YACpB,sDAAM;YACO,0EAAmB;OAbvC,cAAc,CAsC1B;IAAD,qBAAC;CAAA;AAtC0B;;;;;;;;;;;;;ACX3B;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACD;AACW;AACM;AACvB;AACuB;AAOlE;IAGE,cAAc;IAEd,uBACU,KAAqB,EACrB,WAAwB,EACxB,cAA8B,EAC9B,aAA4B,EAC5B,mBAAwC;QALlD,iBAqBC;QApBS,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,wBAAmB,GAAnB,mBAAmB,CAAqB;QAEhD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,gBAAM;YACJ,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAC9C,cAAI;gBACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtB,UAAU,CAAC;oBACT,YAAI,CAAC,mBAAmB,CAAC,YAAY,CACnC,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ,CACpC;gBAFD,CAEC,EACC,GAAG,CAAC,CAAC;YACX,CAAC,CACF,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,gCAAQ,GAAR;IACA,CAAC;;gBAxBgB,8DAAc;gBACR,yEAAW;gBACR,+EAAc;gBACf,wDAAa;gBACP,0EAAmB;;IAVvC,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oMAAoC;;SAErC,CAAC;yCAOiB,8DAAc;YACR,yEAAW;YACR,+EAAc;YACf,wDAAa;YACP,0EAAmB;OAVvC,aAAa,CAgCzB;IAAD,oBAAC;CAAA;AAhCyB;;;;;;;;;;;;;ACZ1B;AAAe,6GAA8C,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACU;AACjB;AACc;AACS;AAOlE;IAcE,2BACU,WAAwB,EACxB,aAA4B,EAC5B,MAAc,EACd,KAAqB,EACrB,mBAAwC;QAJxC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAjBlD,WAAM,GAAG;YACP,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;SAChB,CAAC;IAUE,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAuBC;QAtBC,UAAU,CAAC;YACT,YAAI,CAAC,mBAAmB,CAAC,YAAY,CACnC,UAAU,EACV,gDAAgD,CACjD;QAHD,CAGC,EACC,GAAG,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAC9B,cAAI;YACF,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAM,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACrD,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CACzC,kBAAQ;oBACN,IAAI,QAAQ,CAAC,MAAM,KAAK,SAAS,EAAE;wBACjC,KAAI,CAAC,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;wBAC3C,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;qBAC/B;gBACH,CAAC,CACF,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAClD,cAAI;YACF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC7B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3C,mBAAS;oBACP,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE;wBAClC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;wBAC9C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAI,KAAI,CAAC,MAAM,CAAC,IAAM,CAAC,CAAC,CAAC;qBAChD;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;qBAC7C;gBACH,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;;gBApDsB,yEAAW;gBACT,wDAAa;gBACpB,sDAAM;gBACP,8DAAc;gBACA,0EAAmB;;IAnBvC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gNAAwC;;SAEzC,CAAC;yCAgBuB,yEAAW;YACT,wDAAa;YACpB,sDAAM;YACP,8DAAc;YACA,0EAAmB;OAnBvC,iBAAiB,CAoE7B;IAAD,wBAAC;CAAA;AApE6B;;;;;;;;;;;;;ACX9B;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACU;AACjB;AACF;AACyB;AACZ;AAOtD;IAKE,0BACU,WAAwB,EACxB,aAA4B,EAC5B,MAAc,EACd,YAAsB,EACtB,mBAAwC;QAJxC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAU;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;IAC9C,CAAC;IAEL,mCAAQ,GAAR;QAAA,iBAKC;QAJC,UAAU,CAAC;YACT,YAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,EAAE,iBAAiB,CAAC;QAAnE,CAAmE,EACjE,GAAG,CAAC,CAAC;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,qCAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CACrC,cAAI,IAAI,YAAI,CAAC,OAAO,GAAG,IAAI,EAAnB,CAAmB,CAC5B,CAAC;IACJ,CAAC;IAED,+BAAI,GAAJ,UAAK,OAAO,EAAE,MAAkB;QAAlB,sCAAkB;QAC9B,IAAI,MAAM,KAAK,IAAI,EAAC;YAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAC3E,CAAC;;gBAzBsB,yEAAW;gBACT,wDAAa;gBACpB,sDAAM;gBACA,mEAAQ;gBACD,0EAAmB;;IAVvC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,6MAAuC;;SAExC,CAAC;yCAOuB,yEAAW;YACT,wDAAa;YACpB,sDAAM;YACA,mEAAQ;YACD,0EAAmB;OAVvC,gBAAgB,CAgC5B;IAAD,uBAAC;CAAA;AAhC4B","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["export default \"<div class=\\\"card mb-5\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{ post.image_url }}\\\" appImgFallback='post' [alt]=\\\"post.title\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <a class=\\\"badge badge-primary\\\" [routerLink]='[\\\"/category\\\", post.category.id, post.category.title]'>\\n                    {{ post.category.title }}\\n                </a>\\n                <a class=\\\"badge badge-primary ml-3\\\" *ngIf='post.is_sponsored' >\\n                    SPONSORED\\n                </a>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n                <span>\\n                    {{ post.created | date: 'shortDate' }}\\n                </span>\\n            </div>\\n        </div>\\n        <hr >\\n        <h5 class=\\\"card-title\\\">\\n            {{ post.title }}\\n        </h5>\\n        <p class=\\\"card-text\\\">\\n            {{ post.abstract }}\\n        </p>\\n        <div class=\\\"text-right\\\">\\n            <a [routerLink]='[\\\"/post\\\", post.id, post.title]' class=\\\"btn btn-primary\\\">VIEW</a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container-fluid mt--7\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-md-6\\\">\\n            <app-post-box *ngFor=\\\"let post of posts | paginate:{itemsPerPage: 6, currentPage:p}\\\" [post]='post'></app-post-box>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-footer py-1\\\">\\n                    <app-simple-pagination-controls (pageChange)=\\\"p=$event\\\"></app-simple-pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-12 col-md-4\\\">\\n\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container-fluid mt--7\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-md-6\\\">\\n            <app-post-box *ngFor=\\\"let post of posts | paginate:{itemsPerPage: 6, currentPage:p}\\\" [post]='post'></app-post-box>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-footer py-1\\\">\\n                    <app-simple-pagination-controls (pageChange)=\\\"p=$event\\\"></app-simple-pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-12 col-md-4\\\">\\n\\n        </div>\\n    </div>\\n</div>\"","export default \"<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-header bg-transparent pb-5\\\">\\n          <div class=\\\"text-muted text-center mt-2 mb-3\\\">\\n            <h3>Sign in As</h3>\\n            <div class='row py-lg-2'>\\n              <div class=\\\"custom-control custom-control-alternative custom-radio mb-3 col-4\\\">\\n                <input value=\\\"client\\\" name=\\\"type\\\" [(ngModel)]='loginForm.type' class=\\\"custom-control-input\\\" id=\\\"customRadio1\\\" type=\\\"radio\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"customRadio1\\\">Client</label>\\n              </div>\\n              <div class=\\\"custom-control custom-control-alternative custom-radio mb-3 col-4\\\">\\n                <input value=\\\"vendor\\\" name=\\\"type\\\" [(ngModel)]='loginForm.type' class=\\\"custom-control-input\\\" id=\\\"customRadio2\\\" type=\\\"radio\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"customRadio2\\\">Vendor</label>\\n              </div>\\n              <div class=\\\"custom-control custom-control-alternative custom-radio mb-3 col-4\\\">\\n                <input value=\\\"admin\\\" name=\\\"type\\\" [(ngModel)]='loginForm.type' class=\\\"custom-control-input\\\" id=\\\"customRadio3\\\" type=\\\"radio\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"customRadio3\\\">Admin</label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body px-lg-5 py-lg-2\\\">\\n          <form role=\\\"form\\\">\\n            <div class=\\\"form-group mb-3\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">\\n                    <i class=\\\"ni ni-email-83\\\"></i>\\n                  </span>\\n                </div>\\n                <input class=\\\"form-control\\\" name='email' [(ngModel)]='loginForm.email' placeholder=\\\"Email\\\" type=\\\"email\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">\\n                    <i class=\\\"ni ni-lock-circle-open\\\"></i>\\n                  </span>\\n                </div>\\n                <input class=\\\"form-control\\\" name='password' [(ngModel)]='loginForm.password' placeholder=\\\"Password\\\" type=\\\"password\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n              <input name='remember' [(ngModel)]='loginForm.remember' class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" type=\\\"checkbox\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\n                <span class=\\\"text-muted\\\">Remember me</span>\\n              </label>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary my-4\\\" (click)='login()'>Sign in</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-6\\\">\\n          <!-- <a href=\\\"javascript:void(0)\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a> -->\\n        </div>\\n        <div class=\\\"col-6 text-right\\\">\\n          <a  routerLink='/register' class=\\\"text-light\\\"><small>Create new account</small></a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid mt--7\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-md-8\\\" *ngIf=\\\"post\\\">\\n\\n            <div class=\\\"card bg-secondary shadow border-0\\\">\\n                <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                    <div class=\\\"row justify-content-center\\\">\\n                        <div class=\\\"col-12 col-md-8 col-lg-6\\\">\\n                            <img [src]=\\\"post.image_url\\\" class=\\\"img-fluid\\\">\\n                        </div>\\n                    </div>\\n                    <hr />\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12  text-right\\\">\\n                            <label class=\\\"badge badge-primary mr-5\\\" *ngIf='post.is_sponsored'>SPONSORED</label>\\n                            <a [routerLink]='[\\\"/category\\\", post.category.id, post.category.title ]' class=\\\"badge badge-default\\\">{{ post.category.title}}</a>\\n                        </div>\\n                    </div>\\n                    <div>\\n                        <h2>\\n                            {{ post.title }}\\n                        </h2>\\n                        <h5>\\n                            <span class=\\\"fa fa-clock\\\"></span> \\n                            {{ post.created | date : 'mediumDate' }}\\n                        </h5>\\n                    </div>\\n                    <div [innerHtml]='post.content'>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n    <!-- Table -->\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-6 col-md-8\\\">\\n            <div class=\\\"card bg-secondary shadow border-0\\\">\\n                <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                    <div class=\\\"text-center text-muted mb-4\\\">\\n                        <small>Sign up with credentials</small>\\n                    </div>\\n                    <div *ngIf='referral'>\\n                        <h4>\\n                            Referred By {{ referral.first_name }}\\n                        </h4>\\n                        <hr />\\n                    </div>\\n                    <form role=\\\"form\\\" id=\\\"registerClient\\\" #registerClient=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\">\\n                                        <i class=\\\"ni ni-hat-3\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <input form=\\\"registerClient\\\" [(ngModel)]='client.first_name' class=\\\"form-control\\\" name=\\\"first_name\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" #first_name='ngModel' />\\n                                <div [hidden]=\\\"first_name.valid || first_name.pristine\\\" class=\\\"uk-alert uk-alert-danger\\\">\\n                                    First Name is required!\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\">\\n                                        <i class=\\\"ni ni-hat-3\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <input form=\\\"registerClient\\\" [(ngModel)]='client.last_name' class=\\\"form-control\\\" name=\\\"last_name\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" #last_name='ngModel' />\\n                                <div [hidden]=\\\"last_name.valid || last_name.pristine\\\" class=\\\"uk-alert uk-alert-danger\\\">\\n                                    Last Name is required!\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\">\\n                                        <i class=\\\"ni ni-email-83\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <input form=\\\"registerClient\\\" [(ngModel)]='client.email'  class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" #email='ngModel' />\\n                                <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"uk-alert uk-alert-danger\\\">\\n                                    Email is required!\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"input-group input-group-alternative\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\">\\n                                        <i class=\\\"ni ni-lock-circle-open\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <input form=\\\"registerClient\\\" [(ngModel)]='client.password' class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" #password='ngModel' />\\n                                <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"uk-alert uk-alert-danger\\\">\\n                                    Password is required!\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row my-4\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                                    <input form=\\\"registerClient\\\" name=\\\"agreed\\\" [(ngModel)]='client.agreed' class=\\\"custom-control-input\\\" required id=\\\"customCheckRegister\\\"\\n                                        type=\\\"checkbox\\\">\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                                        <span class=\\\"text-muted\\\">\\n                                            I agree with the <a href=\\\"#!\\\">Privacy Policy</a>\\n                                        </span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"text-center\\\">\\n                            <button form=\\\"registerClient\\\" type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" [disabled]=\\\"!registerClient.form.valid\\\">Create account</button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<!-- Page content -->\\n<div class=\\\"container mt--8 pb-5\\\">\\n    <!-- Table -->\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-10\\\">\\n            <div class=\\\"card bg-secondary shadow border-0\\\">\\n                <div class=\\\"card-body px-lg-5 py-lg-5 row\\\" *ngIf='vendors && vendors.data'>\\n                    <div class=\\\"col-12 col-md-3\\\" *ngFor='let vendor of vendors.data'>\\n                        <div class=\\\"text-center\\\">\\n                            <div class=\\\"\\\">\\n                                <img [src]=\\\"vendor.image_url\\\" style=\\\"width: 180px\\\" appImgFallback='avatar'\\n                                    class=\\\"rounded-circle img-fluid\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"card-body pt-0 pt-md-4\\\">\\n                            <div class=\\\"text-center\\\">\\n                                <h3>\\n                                    {{ vendor.first_name }} {{ vendor.last_name }}\\n                                </h3>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"open(content2, vendor)\\\">\\n                                    VIEW DETAIL\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<ng-template #content2 let-modal>\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ vendor.first_name }} {{ vendor.last_name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"h5 font-weight-300\\\">\\n            <i class=\\\"ni ni-email-83 mr-2\\\"></i> {{ vendor.email }}\\n        </div>\\n        <div class=\\\"h5 mt-4\\\">\\n            <i class=\\\"ni ni-mobile-button mr-2\\\"></i> {{ vendor.phone }}\\n        </div>\\n        <h3>Bank Details</h3>\\n        <div class=\\\"h5 mt-4\\\">\\n            <i class=\\\"fa fa-piggy-bank mr-2\\\"></i> {{ vendor.bank }}\\n        </div>\\n        <div class=\\\"h5 mt-4\\\">\\n            <i class=\\\"fa fa-piggy-bank mr-2\\\"></i> {{ vendor.account_number }}\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Close</button>\\n    </div>\\n</ng-template>\"","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthLayoutRoutes } from './auth-layout.routing';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { VendorsComponent } from './pages/vendors/vendors.component';\nimport { PostComponent } from './pages/post/post.component';\nimport { CategoryComponent } from './pages/category/category.component';\nimport { PostBoxComponent } from './component/post-box/post-box.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ComponentsModule } from 'src/app/components/components.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthLayoutRoutes),\n    FormsModule,\n    NgxPaginationModule,\n    ComponentsModule,\n    NgbModule\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    VendorsComponent,\n    PostComponent,\n    CategoryComponent,\n    PostBoxComponent\n  ]\n})\nexport class AuthLayoutModule { }\n","import { Routes } from '@angular/router';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { VendorsComponent } from './pages/vendors/vendors.component';\nimport { CategoryComponent } from './pages/category/category.component';\nimport { PostComponent } from './pages/post/post.component';\n\nexport const AuthLayoutRoutes: Routes = [\n    { path: '',          component: HomeComponent },\n    { path: 'login',          component: LoginComponent },\n    { path: 'register',       component: RegisterComponent },\n    { path: 'register/:id',       component: RegisterComponent },\n    { path: 'category/:id/:title',       component: CategoryComponent },\n    { path: 'post/:id/:title',       component: PostComponent },\n    { path: 'vendors',       component: VendorsComponent }\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvY29tcG9uZW50L3Bvc3QtYm94L3Bvc3QtYm94LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-post-box',\n  templateUrl: './post-box.component.html',\n  styleUrls: ['./post-box.component.css']\n})\nexport class PostBoxComponent implements OnInit {\n  @Input() post;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvcGFnZXMvY2F0ZWdvcnkvY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { SettingService } from 'src/app/services/setting.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthLayoutComponent } from '../../auth-layout.component';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  category: any;\n  posts: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private settingService: SettingService,\n    private toastrService: ToastrService,\n    private authLayoutComponent: AuthLayoutComponent,\n  ) {\n    this.route.params.subscribe(\n      params => {\n        this.settingService.getCategery(params.id).subscribe(\n          data => {\n            this.category = data.data;\n            setTimeout(() =>\n              this.authLayoutComponent.setPageTitle(\n                this.category.title, this.category.description\n              )\n              , 100);\n          }\n        );\n\n        this.settingService.getCategeryPosts(params.id).subscribe(\n          data => {\n            this.posts = data.data;\n          }\n        );\n      }\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { AuthLayoutComponent } from '../../auth-layout.component';\nimport { SettingService } from 'src/app/services/setting.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  posts = [];\n\n  constructor(\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private router: Router,\n    private authLayoutComponent: AuthLayoutComponent,\n    private settingService: SettingService\n  ) { }\n\n  ngOnInit() {\n    setTimeout(() =>\n      this.authLayoutComponent.setPageTitle('Home', 'Welcome to Our Site')\n      , 100);\n    this.getPosts();\n  }\n\n  getPosts() {\n    this.settingService.getPosts().subscribe(\n      data => {\n        this.posts = data.data;\n      }\n    );\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthLayoutComponent } from '../../auth-layout.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm = {\n    type: '',\n    email: '',\n    password: '',\n    remember: '',\n  };\n\n  constructor(\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private router: Router,\n    private authLayoutComponent: AuthLayoutComponent\n  ) { }\n\n  ngOnInit() {\n    setTimeout(() =>\n    this.authLayoutComponent.setPageTitle('Login', 'Enter Your Login Details')\n    , 100);\n  }\n\n  ngOnDestroy() {\n  }\n\n  login() {\n    this.userService.login(this.loginForm).subscribe(\n      data => {\n        if (data.status === 'success') {\n          this.toastrService.success(data.message);\n          this.router.navigate([`/${this.loginForm.type}`]);\n        } else {\n          this.toastrService.error(data.message);\n        }\n      }\n    );\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvcGFnZXMvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { SettingService } from 'src/app/services/setting.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthLayoutComponent } from '../../auth-layout.component';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  post: any;\n  // posts: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private settingService: SettingService,\n    private toastrService: ToastrService,\n    private authLayoutComponent: AuthLayoutComponent,\n  ) {\n    this.route.params.subscribe(\n      params => {\n        this.settingService.getPost(params.id).subscribe(\n          data => {\n            this.post = data.data;\n            setTimeout(() =>\n              this.authLayoutComponent.setPageTitle(\n                this.post.title, this.post.abstract\n              )\n              , 100);\n          }\n        );\n      }\n    );\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthLayoutComponent } from '../../auth-layout.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  client = {\n    email: '',\n    type: 'client',\n    first_name: '',\n    last_name: '',\n    password: '',\n    agreed: '',\n    referral_id: ''\n  };\n\n  referral: any;\n\n  constructor(\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authLayoutComponent: AuthLayoutComponent\n  ) { }\n\n  ngOnInit() {\n    setTimeout(() =>\n      this.authLayoutComponent.setPageTitle(\n        'Register',\n        'Kindly Register Your Details To Use The System'\n      )\n      , 100);\n    this.route.queryParams.subscribe(\n      data => {\n        if ('id' in data) {\n          console.log(data);\n          const email = this.userService.decryptEmail(data.id);\n          this.userService.getClient(email).subscribe(\n            userData => {\n              if (userData.status === 'success') {\n                this.client.referral_id = userData.data.id;\n                this.referral = userData.data;\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  register() {\n    this.userService.createClient(this.client).subscribe(\n      data => {\n        if (data.status === 'success') {\n          this.toastrService.success(data.message);\n          this.userService.login(this.client).subscribe(\n            loginData => {\n              if (loginData.status === 'success') {\n                this.toastrService.success(loginData.message);\n                this.router.navigate([`/${this.client.type}`]);\n              } else {\n                this.toastrService.error(loginData.message);\n              }\n            }\n          );\n        } else {\n          this.toastrService.error(data.message);\n        }\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYXV0aC1sYXlvdXQvcGFnZXMvdmVuZG9ycy92ZW5kb3JzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { AuthLayoutComponent } from '../../auth-layout.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-vendors',\n  templateUrl: './vendors.component.html',\n  styleUrls: ['./vendors.component.css']\n})\nexport class VendorsComponent implements OnInit {\n  \n  vendors: any;\n  vendor: any;\n\n  constructor(\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private router: Router,\n    private modalService: NgbModal,\n    private authLayoutComponent: AuthLayoutComponent\n  ) { }\n\n  ngOnInit() {\n    setTimeout(() =>\n      this.authLayoutComponent.setPageTitle('Vendors', 'Contact Vendors')\n      , 100);\n      this.getVendors();\n  }\n\n  getVendors() {\n    this.userService.getVendors().subscribe(\n      data => this.vendors = data\n    );\n  }\n\n  open(content, vendor: any = null) {\n    if (vendor !== null){\n      this.vendor = vendor;\n    }\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n  }\n}\n"],"sourceRoot":"webpack:///"}